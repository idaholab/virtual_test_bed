[Tests]
  # Syntax checks
  [coupled_multiphysics_syntax]
    type = RunApp
    input = 'neutronics_eigenvalue.i'
    check_input = True
    executable_pattern = 'blue_crab*|dire_wolf*|fenix*'
  []
  [neutronics_only_syntax]
    type = RunApp
    input = 'neutronics_eigenvalue.i'
    check_input = True
    executable_pattern = 'griffin*|blue_crab*|dire_wolf*|fenix*'
    cli_args = "MultiApps/active='' Transfers/active=''"
  []
  [bison_mp_syntax]
    type = RunApp
    input = 'thermal_ss.i'
    check_input = True
    executable_pattern = 'blue_crab*|dire_wolf*|bison*|fenix*'
  []
  [bison_only_syntax]
    type = RunApp
    input = 'thermal_ss.i'
    check_input = True
    executable_pattern = 'blue_crab*|dire_wolf*|bison*|fenix*'
    cli_args = "MultiApps/active='' Transfers/active=''"
  []
  [sockeye_only_syntax]
    type = RunApp
    input = 'heatpipe_vapor_only.i'
    check_input = True
    executable_pattern = 'dire_wolf*|sockeye*|fenix*'
  []

  # Regression tests with CSV output over a minimum amount of time steps/computation
  #STEFANO THIS IS THE SECTION WE NEED TO FIX. Get Rid of Coupled_multiphysics test - Kept here for cli_arg examples. Goal is to minimize time and processes needed. max_time = 300 and min_parallel = 16 are the MOST you can spend. Shoot for least as possible. 
  [coupled_multiphysics]
    prereq = coupled_multiphysics_syntax
    type = CSVDiff
    input = 'neutronics_eigenvalue.i'
    csvdiff = 'multiphysics_out.csv multiphysics_out_ns0.csv'
    executable_pattern = 'blue_crab*|dire_wolf*|fenix*'
    cli_args = "Executioner/nl_abs_tol=1e-5 Executioner/fixed_point_max_its=2 "
               "Executioner/accept_on_max_fixed_point_iteration=true "
               "Outputs/file_base=multiphysics_out MultiApps/ns/cli_args='Executioner/num_steps=2'"
    # Fuel temperature is out of bounds for MGXS
    allow_warnings = true
    min_parallel = 8
    max_time = 300
    method = 'opt'
    # Tolerance at 1e-6
    #rel_err = 2e-5
  []
  [neutronics_only]
    prereq = neutronics_only_syntax
    type = CSVDiff
    input = 'neutronics_eigenvalue.i'
    #UPDATE GOLD file NAME
    csvdiff = 'filename.csv'
    executable_pattern = 'griffin*|blue_crab*|dire_wolf*|fenix*'
    #TEST cli_args, perhaps switch to Diffusion
    cli_args = "Executioner/nl_abs_tol=1 MultiApps/active='' Transfers/active=''"
    # Fuel temperature is out of bounds for MGXS
    allow_warnings = true
  []
  [bison_mp]
    prereq = bison_mp_syntax
    type = CSVDiff
    input = 'thermal_ss.i'
    csvdiff = 'filename.csv'
    executable_pattern = 'blue_crab*|dire_wolf*|bison*|fenix*'
    cli_args = 'Executioner/num_steps=2'
    min_parallel = 4
  []
  [bison_only]
    prereq = bison_only_syntax
    type = CSVDiff
    input = 'thermal_ss.i'
    csvdiff = 'filename.csv'
    executable_pattern = 'blue_crab*|dire_wolf*|bison*|fenix*'
    cli_args = "Executioner/num_steps=2 MultiApps/active='' Transfers/active=''"
    #min_parallel = 4
  []
  [sockeye_only]
    prereq = sockeye_only_syntax
    type = CSVDiff
    csvdiff = 'filename.csv'
    input = 'heatpipe_vapor_only.i'
    executable_pattern = 'dire_wolf*|sockeye*|fenix*'
    cli_args = "Executioner/num_steps=2"
    #min_parallel = 4
  []
[]
